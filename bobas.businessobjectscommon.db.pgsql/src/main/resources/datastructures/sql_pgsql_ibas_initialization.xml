<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE DataStructureOrchestration>
<ns2:DataStructureOrchestration
    xmlns:ns2="http://colorcoding.org/btulz/transformers">
    <Name>sql_pgsql_ibas_initialization</Name>
    <Description>基于PGSQL的结构映射说明</Description>
    <Integrated>true</Integrated>
    <DriverName>org.postgresql.Driver</DriverName>
    <DbUrl>jdbc:postgresql://${DbServer}:${DbPort}/${DbName}</DbUrl>
    <DbUser>${DbUser}</DbUser>
    <DbPassword>${DbPassword}</DbPassword>
    <Action Name="create db" Isolated="true" DbUrl="jdbc:postgresql://${DbServer}:${DbPort}/postgres">
        <Step Name="check db exists">
            <Script><![CDATA[
                SELECT COUNT(0) FROM pg_database WHERE datname = '${DbName}';
            ]]></Script>
        </Step>
        <Step Name="create db" RunOnValue="0">
            <Script><![CDATA[
                 CREATE DATABASE "${DbName}";
            ]]></Script>
        </Step>
    </Action>
    <Action Name="create stored procedures ${Company}_SP_TRANSACTION_NOTIFICATION">
        <Step Name="check and drop exists return type">
            <Script><![CDATA[
                DROP TYPE IF EXISTS "RESULT_TYPE_${Company}_SP_TRANSACTION_NOTIFICATION";
            ]]></Script>
        </Step>
        <Step Name="create return type">
            <Script><![CDATA[
                CREATE TYPE "RESULT_TYPE_${Company}_SP_TRANSACTION_NOTIFICATION" AS("Code" integer,"Message" varchar(200));
            ]]></Script>
        </Step>
        <Step Name="check stored procedures exists">
            <Script><![CDATA[                
                SELECT count(0) FROM "information_schema"."routines" WHERE "routine_catalog" = '${DbName}' AND "routine_type" = 'FUNCTION' AND "routine_name" = '${Company}_SP_TRANSACTION_NOTIFICATION';
            ]]></Script>
        </Step>
        <Step Name="create stored procedures" RunOnValue="0">
            <Script><![CDATA[
                CREATE FUNCTION "${Company}_SP_TRANSACTION_NOTIFICATION" (
                    object_type character varying,                             /*对象类型（BOCode）*/
                    transaction_type character,                                /*业务类型（Add:A-添加, Update:U-更新, Delete:D-删除）*/
                    num_of_cols_in_key integer,                                /*主键个数*/
                    list_of_key_cols_tab_del character varying,                /*主键名称*/
                    list_of_cols_val_tab_del character varying,                /*主键值*/
                    user integer                                               /*用户标识*/
                ) RETURNS SETOF "RESULT_TYPE_${Company}_SP_TRANSACTION_NOTIFICATION" AS $_$
                DECLARE
                    error_code  integer;                                       /*返回值(0 无错误)*/
                    error_message varchar (200);                               /*返回的消息*/
                    result record;
                BEGIN
                    error_code = 0;
                    error_message = N'OK';
                    /*--------------------------------------------------------------------------------------------------------------------------------*/
                    /*ADD YOUR CODE HERE*/
                    /*--------------------------------------------------------------------------------------------------------------------------------*/
                    /*返回结果*/
                    for result in select error_code "Code",error_message "Message" loop 
                      return next result; 
                    end loop;
                END;
                $_$ LANGUAGE plpgsql;
            ]]></Script>
        </Step>
    </Action>
</ns2:DataStructureOrchestration>